



# 4) install bowtie
wget --output-document bowtie-1.3.0-linux-x86_64.zip https://sourceforge.net/projects/bowtie-bio/files/bowtie/1.3.0/bowtie-1.3.0-linux-x86_64.zip/download
unzip bowtie-1.3.0-linux-x86_64.zip

# 4_2) manually download reference sequences for mapping
# 4_2_1) rRNA, snRNA, snoRNA from ensembl:
# go to: http://www.ensembl.org/biomart/martview/46b9d0f7f0e8858921c12f0e1b75b019?VIRTUALSCHEMANAME=default&ATTRIBUTES=scerevisiae_gene_ensembl.default.sequences.ensembl_gene_id|scerevisiae_gene_ensembl.default.sequences.ensembl_transcript_id|scerevisiae_gene_ensembl.default.sequences.gene_exon_intron|scerevisiae_gene_ensembl.default.sequences.external_gene_name&FILTERS=scerevisiae_gene_ensembl.default.filters.transcript_biotype."rRNA,snoRNA,snRNA"&VISIBLEPANEL=resultspanel
# download as FASTA
# 4_2_2) tRNA from Genomic tRNA database:
wget --output-document tRNA_Refs.fa http://gtrnadb.ucsc.edu/genomes/eukaryota/Scere3/sacCer3-mature-tRNAs.fa
# 4_2_3) rRNA from ensembl:
# got to: https://www.ncbi.nlm.nih.gov/nuccore
# and type the following into the search-field: biomol_rRNA[prop] AND "Saccharomyces cerevisiae"[Organism]
# download all as FASTA (see small feature "send to" towards top or bottom of the page)
4_2_4) upload to server
# combine the three lists and upload to server (on your computer, go to directory and type:)
scp ./* $USER@binfservms01.unibe.ch:/data/users/$USER/RNAseq/01_Data/02_rtsRNA_refSeq # secure-copies all files in this directory to the server (replace $USER with your username)

4_2_5) download reference annotations:
# for reference transcriptome, go to: http://www.ensembl.org/biomart/martview/4e9648722de7cb0da23cf319e08eb5e6?VIRTUALSCHEMANAME=default&ATTRIBUTES=scerevisiae_gene_ensembl.default.sequences.ensembl_gene_id|scerevisiae_gene_ensembl.default.sequences.ensembl_transcript_id|scerevisiae_gene_ensembl.default.sequences.coding|scerevisiae_gene_ensembl.default.sequences.external_gene_name|scerevisiae_gene_ensembl.default.sequences.upstream_flank."18"|scerevisiae_gene_ensembl.default.sequences.downstream_flank."18"&FILTERS=scerevisiae_gene_ensembl.default.filters.transcript_biotype."protein_coding"&VISIBLEPANEL=resultspanel
# then upload with scp as above.

# for reference genome, type:
wget --output-document yeastGenome_ref.fa.gz ftp://ftp.ensembl.org/pub/release-101/fasta/saccharomyces_cerevisiae/dna/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz
# for gtf of genome, type:
wget --output-document yeastGenome_refGTF.gtf.gz ftp://ftp.ensembl.org/pub/release-101/gtf/saccharomyces_cerevisiae/Saccharomyces_cerevisiae.R64-1-1.101.gtf.gz


# 5) prepare indeces for bowtie-mapping:                                        # bowtie-build depends on python3, which cannot be installed on our server. Hence, the indeces must be built on your local machine, and then uploaded to the server for mapping
# 5_1) junkRNA-indexing:
bowtie-build unwantedRNA.txt all_undesiredRNA_Refs
scp ./*ebwt $USER@binfservms01.unibe.ch:/data/users/$USER/RNAseq/01_Data/02_rtsRNA_refSeq/indexes/
scp ./*ebwt trey@binfservms01.unibe.ch:/data/users/$USER/RNAseq/01_Data/02_rtsRNA_refSeq/indexes/

# 5_2) transcriptome Annotations indexing:
bowtie-build mart_exportTranscriptome.txt transcriptome
scp ./transcriptome* trey@binfservms01.unibe.ch:/data/users/trey/RNAseq/01_Data/03_Transcrpt_refAnnot/

# 5_3) genome Annotations indexing:
bowtie-build Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa R64_genome
scp ./R64_genome* $USER@binfservms01.unibe.ch:/data/users/$USER/RNAseq/01_Data/04_Genome_refAnnot/



# ------------------------------------------------------------------------------
# 03_Clean transcripts from non-messenger RNA  ---------------------------------
# First, fetch non-messenger transcript-sequences & combine into single file for mapping
# then, index them
bowtie-build all_undesiredRNA_Refs.txt all_undesiredRNA_Refs.txt
# then, download the fastq files from server:
scp trey@binfservms01.unibe.ch:/data/users/trey/RNAseq/01_Data/01_fastq_rawSeq/ .
bowtie -t
# then, filter the sequences with the indexed unwanted RNA:



#SBATCH --cpus-per-task=4
#SBATCH --mem-per-cpu=80000M

for i in $(ls -d 01_Data/01_fastq_rawSeq/*.fastq);
do bowtie -t 4 ./... $i --un *_clean.fastq 2>> logfile.txt;
done
